openapi: 3.0.0
info:
  version: "1.0.0"
  title: "User Management API"
  description: "API for managing users in your application"

securityDefinitions:
  BearerToken:
    type: apiKey
    name: Authorization
    in: header

paths:
  /users/current:
    get:
      summary: Get the current user
      description: Retrieve information about the currently logged-in user.
      tags:
        - Users
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/User"
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users in the system.
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal server error

    post:
      summary: Create a new user
      description: Create a new user in the system.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: user
          in: body
          description: User object to be created
          required: true
          schema:
            $ref: "#/definitions/UserInput"
          example:
            firstName: "Leo"
            lastName: "Mata"
            age: 26
            username: "lmata"
            email: "lmata@gmail.com"
            role: "ADMIN"
      responses:
        201:
          description: User created successfully
          schema:
            $ref: "#/definitions/User"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal server error

  /users/{uid}:
    get:
      summary: Get a user by ID
      description: Retrieve user information by their ID.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          description: ID of the user to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/User"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: User not found
        500:
          description: Internal server error

    put:
      summary: Update a user by ID
      description: Update user information by their ID.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          description: ID of the user to update
          required: true
          type: string
        - name: user
          in: body
          description: User object with updated information
          required: true
          schema:
            $ref: "#/definitions/UserInput"
      responses:
        200:
          description: User updated successfully
          schema:
            $ref: "#/definitions/User"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: User not found
        500:
          description: Internal server error

    delete:
      summary: Delete a user by ID
      description: Delete a user by their ID.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: path
          description: ID of the user to delete
          required: true
          type: string
      responses:
        200:
          description: User deleted successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: User not found
        500:
          description: Internal server error

  /users/:
    delete:
      summary: Delete inactive users
      description: Delete inactive users in the system.
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        200:
          description: Inactive users processed
          schema:
            type: array
            items:
              $ref: "#/definitions/InactiveUserReport"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Error processing inactive users

definitions:
  UserInput:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      age:
        type: integer
      username:
        type: string
      email:
        type: string
      password:
        type: string
      role:
        type: string
      lastActivity:
        type: string

  User:
    type: object
    properties:
      _id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      age:
        type: integer
      username:
        type: string
      email:
        type: string
      password:
        type: string
      cart:
        type: string
      role:
        type: string
      lastActivity:
        type: string

  InactiveUserReport:
    type: object
    properties:
      email:
        type: string
      activity:
        type: string
      action:
        type: string
